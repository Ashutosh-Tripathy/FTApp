// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots MyButton Default 1`] = `
<View>
  <View
    accessibilityComponentType="button"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Default button
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Picker Default 1`] = `
<View>
  <View
    style={
      Object {
        "height": 50,
        "width": 100,
      }
    }
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Please select any value",
            "textColor": undefined,
            "value": 0,
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots Picker Have list of items 1`] = `
<View>
  <View
    style={
      Object {
        "height": 50,
        "width": 100,
      }
    }
  >
    <RCTPicker
      items={
        Array [
          Object {
            "label": "Please select any value",
            "textColor": undefined,
            "value": 0,
          },
          Object {
            "label": "label1",
            "textColor": undefined,
            "value": 1,
          },
          Object {
            "label": "label2",
            "textColor": undefined,
            "value": 2,
          },
        ]
      }
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Storyshots TextInputWithLabel Default 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    Default label
  </Text>
  <TextInput
    allowFontScaling={true}
    multiline={true}
    onChange={[Function]}
    value="Place holder text"
  />
</View>
`;

exports[`Storyshots TextInputWithLabel Multiline textinput 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    Default label
  </Text>
  <TextInput
    allowFontScaling={true}
    multiline={true}
    onChange={[Function]}
    value="Place holder text"
  />
</View>
`;
